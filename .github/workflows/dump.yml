name: Bump Version and Publish

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Configurar Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Instalar depend√™ncias
        run: |
          npm ci

      - name: Build do projeto
        run: npm run build && npx tsc



      - name: An√°lise com SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


          
      - name: Bump de vers√£o (minor)
        id: package_version
        run: |
          VERSION=$(npm version minor -m "ci: release %s [skip ci]") # Removido o '|' extra e indentado corretamente
          echo "version=$VERSION" >> $GITHUB_OUTPUT    

      - name: Publicar no NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push tag e versionamento para o GitHub
        run: |
          git push origin develop --follow-tags

      - name: Apagar tags antigas
        run: |
          # Obt√©m a tag mais recente (a √∫ltima criada)
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)

          echo "Mantendo a tag mais recente: $latest_tag"

          # Lista todas as tags, exclui a mais recente e deleta as demais
          for tag in $(git tag); do
            if [ "$tag" != "$latest_tag" ]; then
              git push --delete origin "$tag"
              git tag -d "$tag"
              echo "Tag apagada: $tag"
            fi
          done

      - name: Apagar tags antigas
        run: |
          # Obt√©m a tag mais recente (a √∫ltima criada)
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)

          echo "Mantendo a tag mais recente: $latest_tag"

          # Lista todas as tags, exclui a mais recente e deleta as demais
          for tag in $(git tag); do
            if [ "$tag" != "$latest_tag" ]; then
              git push --delete origin "$tag"
              git tag -d "$tag"
              echo "Tag apagada: $tag"
            fi
          done
      - name: Definir timestamp
        id: date
        run: echo "timestamp=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> "$GITHUB_OUTPUT"

        
      - name : Enviar email de notifica√ß√£o
        uses:  dawidd6/action-send-mail@v3
        with: 
              server_address: smtp.gmail.com
              server_port: 465
              secure: true
              username: ${{ secrets.EMAIL_USER }}
              password: ${{ secrets.EMAIL_PASS }}


              subject: "üì¶ Novo pacote publicado: v${{ steps.package_version.outputs.version}} "
              
              html_body:  |
                
                <!DOCTYPE html>
                <html lang="pt-BR">
                <head>
                  <meta charset="UTF-8" />
                  <meta name="viewport" content="width=device-width, initial-scale=1" />
                  <title>Notifica√ß√£o de Publica√ß√£o</title>
                  <style>
                    body { font-family: Arial, sans-serif; background-color: #f4f6f8; color: #333; margin: 0; padding: 20px; }
                    .container { background: white; max-width: 600px; margin: auto; padding: 25px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); }
                    p { font-size: 16px; margin-bottom: 20px; }
                    ul { list-style: none; padding: 0; margin-bottom: 30px; }
                    ul li { margin-bottom: 12px; font-size: 15px; }
                    ul li strong { color: #222; }
                    ul li a { color: #1a73e8; text-decoration: none; }
                    ul li a:hover { text-decoration: underline; }
                    .button { display: inline-block; background-color: #1a73e8; color: white !important; padding: 12px 25px; border-radius: 5px; font-weight: bold; font-size: 16px; text-decoration: none; margin-bottom: 30px; }
                    .button:hover { background-color: #155db2; }
                    .footer { font-size: 13px; color: #777; text-align: center; border-top: 1px solid #eee; padding-top: 15px; }
                  </style>
                </head>
                <body>
                  <div class="container">
                    <p>O pacote foi publicado com sucesso no NPM.</p>
                    <ul>
                      <li><strong>üìÅ Reposit√≥rio:</strong> ${{ github.repository }}</li>
                      <li><strong>üîñ Vers√£o:</strong> ${{ steps.package_version.outputs.version }}</li>
                      <li><strong>üïí Data:</strong> ${{ github.event.head_commit.timestamp }}</li>
                      <li><strong>üë§ Autor:</strong> ${{ github.event.head_commit.author.name }}</li>
                      <li><strong>üîó Commit:</strong>
                        <a href="https://github.com/${{ github.repository }}/commit/${{ github.sha }}" target="_blank" rel="noopener noreferrer">Ver commit</a>
                      </li>
                    </ul>
                    <a class="button" href="https://www.npmjs.com/package/spark-generators-lib" target="_blank" rel="noopener noreferrer">Acessar pacote no NPM</a>
                    <div class="footer">Enviado automaticamente por GitHub Actions ‚Ä¢ spark-generators-lib</div>
                  </div>
                </body>
                </html>















              to: murilodiasdeoliveira@gmail.com, anabeatriiz@hotmail.com 
              from: GitHub Actions <${{ secrets.EMAIL_USER }}>
              

